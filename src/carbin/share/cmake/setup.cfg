[metadata]
name = carbin
description = Example to show how to use cmake-build-extension with CMake, SWIG and NumPy.
long_description = file: README.md
long_description_content_type = text/markdown
author = jeff li
author_email = lijippy@163.com
license = MIT
platforms = any
url = https://github.com/flare-rpc/carbin
project_urls =
    Source  = https://github.com/carbin
    Tracker = https://github.com/carbin
keywords = setuptools extension cpp cmake build package pypi bindings swig pybind11
classifiers =

[options]
zip_safe = False
packages = find:
package_dir =
    =src
python_requires = >=3.6
install_requires =
    numpy
    # This requirement is only necessary if the build_extension_env
    # context manager is used in the top-level __init__.py
    carbin

[options.packages.find]
where = python

#[options.extras_require]
#test =
#    pytest
#    pytest-icdiff
#all =
#    %(test)s

# This also requires using the "expose_binaries" option in setup.py.
# It creates a generic <package>.bin.__main__ file that is exposed
# as <env>/bin/<executable_name> that relays all input arguments to
# the C++ executable.
#[options.entry_points]
#console_scripts =
#    print_answer_swig = mymath_swig.bin.__main__:main
#    print_answer_pybind11 = mymath_pybind11.bin.__main__:main

#[tool:pytest]
#addopts = -rsxX -v
#testpaths = tests
